# Default values for k8s-image-swapper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/estahn/k8s-image-swapper
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

containerPort: 8443

kubeVersionOverride: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Labels that will be added on all the resources (not in selectors)
commonLabels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true

deployment:
  # Annotations to add to the deployment
  annotations: {}

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: false

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  enabled: false
  minAvailable: "1"

nodeSelector: {}

tolerations: []

affinity: {}

hostNetwork: false

# Will generate the TLS certificate and patch the webhook
patch:
  enabled: true
  image:
    repository: k8s.gcr.io/ingress-nginx/kube-webhook-certgen
    tag: v1.3.0
    pullPolicy: IfNotPresent
  priorityClassName: ""
  podAnnotations: {}
  nodeSelector: {}
  resources: {}

# You can use cert-manager to handle TLS cert creation and putting it into webhook cfg
certmanager:
  enabled: false

webhook:
  failurePolicy: Ignore
  reinvocationPolicy: Never
  namespaceSelector: {}
  objectSelector: {}

# -- If set, the secret will be used as environment variables, see awsSecretKeys.
awsSecretName: ""
# -- Specify which keys to pull from the .awsSecretName secret for the associated environment variables.
awsSecretKeys:
  # -- If using Hashicorp Vault Operator w/ AWS engine, use `access_key`
  accessKeyID: "aws_access_key_id"
  # -- If using Hashicorp Vault Operator w/ AWS engine, use `secret_key`
  secretAccessKey: "aws_secret_access_key"

# Private registries are supported via imagePullSecrets on Pods and ServiceAccounts.
# k8s-image-swapper requires to read the secret containing the docker authentication details
# and therefore needs to be granted additional permissions. By default the ClusterRole provides
# access to all secrets in the cluster. By providing secret names via `secretReader.secretNames`
# the access can be reduced to specific secrets.
secretReader:
  enabled: false
  secretNames: []

config:
  dryRun: true

  logLevel: debug
  logFormat: console

  source:
    # Filters provide control over what pods will be processed.
    # By default all pods will be processed. If a condition matches, the pod will NOT be processed.
    # For query language details see https://jmespath.org/
    filters:
      - jmespath: "obj.metadata.namespace == 'kube-system'"

  target:
    aws:
      accountId: "12345678"
      region: ap-southeast-2

dev:
  enabled: false
  webhookURL: https://xxx.ngrok.io

# -- Additional environment variables to be defined on the container
# Follows the same syntax as containers.env in a Pod v1 API
extraEnv: []

# -- Additional manifests to be deployed
# Can be either a full object OR a string containing valid YAML
extraManifests: []

# -- Additional manifests to be deployed. These will be passed through the templating engine
# Useful if you need to use values from this chart in your manifests
extraManifestsTemplated: []
#  - kind: ConfigMap
#    metadata:
#      name: "{{ .Release.Name }}-extra-config"
#    data:
#      key: value

# -- The DNS suffix of cluster addresses
clusterSuffix: cluster.local

test:
  # -- Should the test be included with the release
  enabled: true
  # -- Set affinity for the test pod
  affinity: {}
  # -- The image to use for running the test
  image: busybox
  # -- Set a node selector for the test pod
  nodeSelector: {}
  # -- Set tolerations for the test pod
  tolerations: []

# -- The type of volume to be used for caching images
cacheVolume:
  emptyDir: {}
