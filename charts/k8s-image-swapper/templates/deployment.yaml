apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-image-swapper.fullname" . }}
  labels:
    {{- include "k8s-image-swapper.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "k8s-image-swapper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "k8s-image-swapper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      serviceAccountName: {{ include "k8s-image-swapper.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.awsSecretName }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.awsSecretName }}
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.awsSecretName }}
                  key: aws_secret_access_key
          {{- end }}
          args:
            - --config=/.k8s-image-swapper.yaml
            - --tls-cert-file=/usr/local/certificates/cert
            - --tls-key-file=/usr/local/certificates/key
            - --listen-address=:{{ .Values.containerPort }}
          ports:
            - name: https
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "k8s-image-swapper.fullname" . }}
              subPath: config.yaml
              mountPath: /.k8s-image-swapper.yaml
              readOnly: true
            {{- if .Values.patch.enabled }}
            - name: webhook-cert
              mountPath: "/usr/local/certificates/"
              readOnly: true
            {{- end }}
      volumes:
        - name: {{ include "k8s-image-swapper.fullname" . }}
          configMap:
            name: {{ include "k8s-image-swapper.fullname" . }}
        {{- if .Values.patch.enabled }}
        - name: webhook-cert
          secret:
            secretName: {{ template "k8s-image-swapper.fullname". }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
